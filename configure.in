# HGD Autogunk

AC_INIT([hgd], [0.4.0], [vext01@gmail.com, me92@kent.ac.uk])
AC_CONFIG_HEADERS([config.h])

# we need the install prefix at compile time
if test "${prefix}" = "NONE"; then
	prefix=/usr/local
fi
CFLAGS="${CFLAGS} -DPREFIX='\"${prefix}\"'"
           
AC_ARG_WITH([python], AS_HELP_STRING([--without-python],
	    [Ignore presence of python and disable it]))
AC_ARG_WITH([python], AS_HELP_STRING([--with-python=<version>],
	    [Build with specific version of Python]))

AC_ARG_WITH([libconfig], AS_HELP_STRING([--without-libconfig],
	    [Ignore presence of libconfig and disable it]))

AC_ARG_WITH([taglib], AS_HELP_STRING([--without-taglib],
	    [Ignore presence of taglib and disable it]))

AC_LANG_C
        
AC_PROG_MAKE_SET
               
AC_HEADER_STDC

AH_TEMPLATE(HAVE_LIBCONFIG, "defined if we are building with libconfig support")
AH_TEMPLATE(HAVE_TAGLIB, "defined if we are building with taglib support")
AH_TEMPLATE(HAVE_PYTHON, "defined if we are building with python support")

# libconfig
AS_IF([test "x$with_libconfig" != "xno"], 
	[PKG_CHECK_MODULES([LIBCONFIG],[libconfig >= 1.3.2],
		[have_libconfig=yes], [have_libconfig=no])], [have_libconfig=no])

AS_IF([test "x$have_libconfig" = "xyes"],
      [AC_DEFINE(HAVE_LIBCONFIG)],
      [AS_IF([test "x$with_libconfig" = "xyes"],
             [AC_MSG_ERROR([libconfig requested but not found])
      ])
])

# taglib
AS_IF([test "x$with_taglib" != "xno"], 
	[PKG_CHECK_MODULES([TAGLIB], [taglib_c >= 1.6],
		[have_taglib=yes], [have_taglib=no])], [have_taglib=no])

AS_IF([test "x$have_taglib" = "xyes"],
      [AC_DEFINE(HAVE_TAGLIB)],
      [AS_IF([test "x$with_taglib" = "xyes"],
             [AC_MSG_ERROR([taglib requested but not found])
      ])
])

# we just cant work without sqlite
PKG_CHECK_MODULES([SQLITE], [sqlite3 >= 3.6.22])

# XXX optional ?
PKG_CHECK_MODULES([SSL], [libssl >= 0.9.8])

# XXX search libs macro
# If readpassphrase() is not in libc, it is in libbsd (linux)
AC_CHECK_FUNC([readpassphrase],,
	      [PKG_CHECK_MODULES([BSD], [libbsd >= 0.2.0])]
	      )

# check for python manually, as we can't find a portable way
# we accept 2.6 and 2.7 for now
if test "x${with_python}" = "x"; then
	py_config_search="python2.7-config python2.6-config python-config"
else
	py_config_search=python${with_python}-config
fi
AS_IF([test "x$with_python" != "xno"], [

for i in ${py_config_search}; do
	AC_MSG_CHECKING([$i])
	if test -n "`which $i 2> /dev/null`"; then
		AC_MSG_RESULT([yes])
		PYTHON_CONFIG=$i
		break;
	fi
	AC_MSG_RESULT([no])
	have_python=no
done

if test -n "${PYTHON_CONFIG}"; then
	PYTHON_LDFLAGS="`$PYTHON_CONFIG --ldflags` -L`$PYTHON_CONFIG --prefix`/lib"
	PYTHON_CFLAGS=`$PYTHON_CONFIG --cflags`
	have_python=yes
fi
], [have_python=no])

AS_IF([test "x$have_python" = "xyes"],
      [AC_DEFINE(HAVE_PYTHON)],
      [AS_IF([test "x$with_python" = "xyes"],
             [AC_MSG_ERROR([python requested but not found])
      ])
])

# where we are building will go into the python class path
CFLAGS="${CFLAGS} -DBUILD_DIR='\"`pwd`\"'"
# and where to pick up installed systemwide python support
CFLAGS="${CFLAGS} -DDATAROOTDIR='\"${datarootdir}\"'"

AC_CHECK_PROG([MPLAYER], "mplayer", "yes", "no")

# as we did this manually, we have to substitute manually
AC_SUBST([PYTHON_CFLAGS])
AC_SUBST([PYTHON_LDFLAGS])
AC_SUBST([prefix])

AC_OUTPUT([Makefile])
 
AC_MSG_NOTICE([
                   j#000000000000000000000000#00000000000000
                   j#00000000000000000Y*99- "~!?HN#000000000
                   j#00000000000009^-. --  .:.... u@#0000000
                   j#00000000000P`. ... .:x,;.=:_..:40000000
                   j#0000000000P..... .=,jXd44XGdXa;:4000000
                   j#000000000F .. . .:uxOOXXXXXXXOG;4000000
                   j#00000000# -. ...=x+!)_=x==xx=?*@:>@:000000
                   j#00000000 ;.. .:=!-====xv==jx=xx=+P00000
                   j#0000000I.: . ._jn=n=xxxxcx%3g%@:>@=>&00000
                   j#0000000:..o;::=xxnxXnxxu2x!3On3qW&00000
                   j#0000000;.:3(::=+@:>@%%333O33=+3+33OW000000
                   j#00000001..?na;:==%333O!x=%%%@:>@x=44000000
                   j#0000000L.. -~`::=%%%3333uuu333uuW000000
                   j#00000000{... ...:==%%%3333XOO3O34000000
                   j#0000000F . . ..-.::+=+++@:>@%%3%3%~=#00000
                   j#000000#(.. ... ;:::::;:=====;/...?Q0000
                   j#000000A . . . .=+=:+x=xx=xxxO(...:+N000
                   j#00000#I.:......:+===%33%333OO;.....:W00
                   j#000000i. _,-... ++=+xx%33OO"~......j000
                   j#000000AW??... . :+x@:>@x%3"'....:.-.:.:4#0
                   j#0000#0P~.    . ..=%@:>@@:>@~.... ....-.---.?9
                   j#000P'.  . ... ,..=X`........ ...:.:.:.:
                   j#P^. .. . ....:%x,?r--......... ..-.:.:: 
])

AS_IF([test "x$have_python" != "xyes"],
	disabled="$disabled python"
    , enabled="$enabled python")
AS_IF([test "x$have_libconfig" != "xyes"],
	disabled="$disabled libconfig"
    , enabled="$enabled libconfig")
AS_IF([test "x$have_taglib" != "xyes"],
	disabled="$disabled taglib"
    , enabled="$enabled taglib")

AC_MSG_NOTICE([
=============================
Modules Enabled :${enabled}
Modules Disabled:${disabled}
=============================])

AS_IF([test "$mplayer" = "no"], AC_MSG_WARN("mplayer was not found. Please install it to use playd."))
